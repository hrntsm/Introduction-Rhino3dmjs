{"version":3,"sources":["AppBar.tsx","CreateSphere.tsx","UserStringTable.tsx","CheckUploadedFile.tsx","App.tsx","index.tsx"],"names":["ButtonAppBar","prop","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","variant","component","title","Button","CreateSphere","useState","sphere","setSphere","open","setOpen","saveByteArray","fileName","byte","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click","handleClose","event","reason","action","onClick","fontSize","diameter","width","Slider","defaultValue","valueLabelDisplay","onChange","e","rhino3dm","then","Module","Sphere","target","value","console","log","doc","File3dm","item","center","radius","objects","addSphere","toByteArray","Snackbar","autoHideDuration","onClose","message","BasicTable","data","map","row","gIndex","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","index","border","scope","CheckUploadedFile","file","setFile","userStrings","setUserStrings","openNoFile","setOpenNoFile","CreateUserStringList","list","i","count","obj","get","push","attributes","getUserStrings","files","a","arrayBuffer","buffer","arr","Uint8Array","fromByteArray","App","rootElement","getElementById","script","src","addEventListener","ReactDOM","render","body","appendChild"],"mappings":"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","file":"static/js/main.bd756cda.chunk.js","sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport default function ButtonAppBar(prop: any) {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {prop.title}\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import { useState, SyntheticEvent, MouseEvent, Fragment } from 'react';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { File3dm, RhinoModule, Sphere } from 'rhino3dm';\n\nexport function CreateSphere() {\n  const [sphere, setSphere] = useState<Sphere>();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const onChange = (e: any) => {\n    window.rhino3dm().then((Module: RhinoModule) => {\n      setSphere(new Module.Sphere([1, 2, 3], e.target.value));\n      console.log(sphere);\n    });\n  };\n\n  const onClick = () => {\n    window.rhino3dm().then((Module: RhinoModule) => {\n      const doc: File3dm = new Module.File3dm();\n\n      if (sphere) {\n        const item: Sphere = new Module.Sphere((sphere.center as number[]), (sphere.radius as number));\n        // @ts-ignore\n        doc.objects().addSphere(item, null);\n        saveByteArray('sphere.3dm', doc.toByteArray());\n      } else {\n        setOpen(true);\n      }\n    });\n  };\n\n  const saveByteArray = (fileName: string, byte: any) => {\n    const blob: Blob = new Blob([byte], { type: 'application/octect-stream' });\n    const link: HTMLAnchorElement = document.createElement('a');\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  const handleClose = (\n    event: SyntheticEvent | MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const action = (\n    <Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </Fragment>\n  );\n\n  return (\n    <div>\n      <h3>Create Sphere</h3>\n      <p>{sphere ? '生成された Sphere の直径は ' + sphere.diameter + ' です。' : 'Sphere はまだ作成されていません'}</p>\n      <Box width={300}>\n        <Slider defaultValue={16} valueLabelDisplay=\"auto\" onChange={onChange} />\n      </Box>\n      <Button variant=\"outlined\" onClick={onClick}>Download</Button>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message=\"Note archived\"\n        action={action}\n      />\n    </div>\n  );\n}\n","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function BasicTable(prop: any) {\n    return (\n        <div>\n            {prop.data ? prop.data.map((row: string[][], gIndex: number) => (\n                <div>\n                    <p>{\"Geometry Index:\" + gIndex}</p>\n                    <TableContainer sx={{ width: 300 }} component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Index</TableCell>\n                                    <TableCell align=\"right\">Key</TableCell>\n                                    <TableCell align=\"right\">Value</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {row.map((item: string[], index: number) => (\n                                    <TableRow\n                                        key=\"geometry\"\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {index}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{item[0]}</TableCell>\n                                        <TableCell align=\"right\">{item[1]}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>))\n                : null}\n        </div>\n    );\n}","import { useState, SyntheticEvent, MouseEvent, Fragment } from 'react';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { File3dm, File3dmObjectTable, RhinoModule } from 'rhino3dm';\nimport BasicTable from './UserStringTable';\n\nexport function CheckUploadedFile() {\n  const [file, setFile] = useState<File>();\n  const [userStrings, setUserStrings] = useState<string[]>();\n  const [openNoFile, setOpenNoFile] = useState({\n    open: false,\n    message: '',\n  });\n\n  const onChange = (e: any) => {\n    setFile(e.target.files[0]);\n  };\n\n  const onClick = () => {\n    if (file) {\n      window.rhino3dm().then(async (Module: RhinoModule) => {\n        const buffer: ArrayBuffer = await file.arrayBuffer();\n        const arr: Uint8Array = new Uint8Array(buffer);\n        // @ts-ignore\n        const doc: File3dm = Module.File3dm.fromByteArray(arr);\n        console.log(doc);\n\n        CreateUserStringList(doc);\n      });\n    } else {\n      setOpenNoFile({...openNoFile, open: true, message: \"ファイルが選択されていません\"});\n    }\n  };\n\n  const CreateUserStringList = (doc: File3dm) => {\n    const list: string[] = [];\n\n    if (doc) {\n      // @ts-ignore\n      const objects: File3dmObjectTable = doc.objects();\n\n      for (let i = 0; i < objects.count; i++) {\n        // @ts-ignore\n        const obj = objects.get(i);\n        // @ts-ignore\n        list.push(obj.attributes().getUserStrings());\n      }\n    }\n\n    setUserStrings(list);\n  };\n\n  const handleClose = (\n    event: SyntheticEvent | MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenNoFile({...openNoFile, open: false});\n  };\n\n  const action = (\n    <Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </Fragment>\n  );\n\n  return (\n    <div>\n      <h3>Check Uploaded File</h3>\n      <input type=\"file\" onChange={onChange} />\n      <Button variant=\"outlined\" onClick={onClick}>Check</Button>\n      <BasicTable data={userStrings} />\n      <Snackbar\n        open={openNoFile.open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={openNoFile.message}\n        action={action}\n      />\n    </div>\n  );\n}\n","import './App.css';\nimport ButtonAppBar from './AppBar';\nimport { CreateSphere } from './CreateSphere';\nimport { CheckUploadedFile } from './CheckUploadedFile';\n\ndeclare global {\n  // eslint-disable-next-line no-unused-vars\n  interface Window {\n    rhino3dm: any;\n  }\n}\n\nexport default function App() {\n  return (\n    <div>\n      <ButtonAppBar title=\"Rhino3dm Test Project\" />\n      <CreateSphere />\n      <CheckUploadedFile />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nconst script = document.createElement(\"script\");\nscript.src = \"https://cdn.jsdelivr.net/npm/rhino3dm@0.15.0-beta/rhino3dm.min.js\";\nscript.addEventListener(\"load\", () => {\n  ReactDOM.render(\n    <StrictMode>\n      <App />\n    </StrictMode>,\n    rootElement\n  );\n});\ndocument.body.appendChild(script);\n\n"],"sourceRoot":""}